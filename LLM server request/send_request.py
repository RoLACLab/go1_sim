# send_request.py
import requests
import json
import os
import time

# The server's IP address and port
SERVER_URL = "http://141.219.171.151:5000/get_action"

# Path to the JSON file generated by ScanToJson
SCAN_FILE_PATH = os.path.join(os.path.expanduser("~"), "scan_data.json")

def load_latest_scan():
    """Load the latest LiDAR scan from JSON file"""
    try:
        with open(SCAN_FILE_PATH, 'r') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError) as e:
        print(f"Error loading scan data: {str(e)}")
        return None

# --- Prepare the Data to Send ---

# Load the latest LiDAR scan
lidar_data = load_latest_scan()

if not lidar_data:
    print("No valid LiDAR data found. Exiting.")
    exit(1)

# For the first action, the history is empty
action_history = []

# Input to the LLM server
payload = {
    "lidar_data": lidar_data,
    "action_history": action_history}

OUTPUT_FILE_PATH = os.path.join(os.path.expanduser("~"), "action_plan.json")

# --- Send the Data and Get the Response ---
print("--- DATA TO BE SENT ---")
print(json.dumps(payload, indent=2))
print("-" * 25)

try:
    print(f"\nSending request to server at {SERVER_URL}...")

    # Send the HTTP POST request
    response = requests.post(SERVER_URL, json=payload, timeout=120)

    # Check if the server responded with an error
    response.raise_for_status()

    # Get the action plan from the server's response
    action_plan = response.json()

    print("\n--- ACTION PLAN RECEIVED ---")
    print(json.dumps(action_plan, indent=2))
    print("-" * 25)
    with open(OUTPUT_FILE_PATH, 'w') as output_file:
        json.dump(action_plan, output_file, indent=2)
    
    print(f"\nSuccess! Action plan saved to: {OUTPUT_FILE_PATH}")

except requests.exceptions.RequestException as e:
    print(f"\nERROR: Could not connect to the server.")
    print(e)